on:
  workflow_call:
    inputs:
      manifest-path:
        required: true
        type: string

jobs:
  build-wheels:
    # Heavily cribbed from https://github.com/pydantic/pydantic-core/blob/1ced3e6b4e87b03c460952f1970a97b1c8cbc605/.github/workflows/ci.yml#L399-L508
    name: Build wheels on ${{ matrix.os }} (${{ matrix.target }} - all${{ matrix.os == 'linux' && format(' - {0}', matrix.manylinux == 'auto' && 'manylinux' || matrix.manylinux) || '' }})
    strategy:
      fail-fast: false
      matrix:
        os: [linux, macos, windows]
        target: [x86_64, aarch64]
        manylinux: [auto]
        include: # if stuff is excluded, it was broken when i made this and i got sick of trying to fix it
          - os: linux
            manylinux: auto
            target: i686
          - os: linux
            manylinux: auto
            target: armv7
          - os: linux
            manylinux: auto
            target: ppc64le

          - os: linux
            manylinux: musllinux_1_1
            target: x86_64
          - os: linux
            manylinux: musllinux_1_1
            target: aarch64
          - os: linux
            manylinux: musllinux_1_1
            target: armv7

          - os: macos
            target: x86_64
          - os: macos
            target: aarch64

          - os: windows
            target: x86_64
            interpreter: 3.10 3.11 3.12 3.13
          - os: windows
            target: i686
            python-architecture: x86
            interpreter: 3.8 3.9 3.10 3.11 3.12 3.13

        exclude:
          - os: linux
            manylinux: auto
            target: aarch64
          - os: linux
            manylinux: auto
            target: s390x
          - os: linux
            manylinux: auto
            target: x86_64
          - os: windows
            target: aarch64

    runs-on: ${{ (matrix.os == 'linux' && 'ubuntu') || matrix.os }}-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          architecture: ${{ matrix.python-architecture || 'x64' }}
      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          manylinux: ${{ matrix.manylinux }}
          args: --release --out dist --interpreter ${{ matrix.interpreter || '3.8 3.9 3.10 3.11 3.12 3.13 pypy3.9 pypy3.10' }} --manifest-path ${{ inputs.manifest-path }}
          rust-toolchain: 1.81 # https://github.com/geoarrow/geoarrow-rs/issues/716
          before-script-linux: |
            # If we're running on rhel centos, install needed packages.
            if command -v yum &> /dev/null; then
                yum update -y && yum install -y perl-core openssl openssl-devel pkgconfig libatomic

                # If we're running on i686 we need to symlink libatomic
                # in order to build openssl with -latomic flag.
                if [[ ! -d "/usr/lib64" ]]; then
                    ln -s /usr/lib/libatomic.so.1 /usr/lib/libatomic.so
                fi
            else
                # If we're running on debian-based system.
                apt update -y && apt-get install -y libssl-dev openssl pkg-config
            fi
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: pypi_files_${{ matrix.os }}_${{ matrix.target }}_${{ matrix.interpreter || 'all' }}_${{ matrix.manylinux }}
          path: dist
