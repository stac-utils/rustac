name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_TERM_VERBOSE: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Test
        run: cargo test --lib
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Fmt
        run: cargo fmt
      - name: Clippy
        run: cargo clippy --all --all-features
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        chunk:
          - 1
          - 2
          - 3
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Install check-all-features
        run: cargo install cargo-all-features
      - name: Check
        run: cargo check-all-features --n-chunks 3 --chunk ${{ matrix.chunk }}
  check-nightly:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@nightly
      - uses: Swatinem/rust-cache@v2
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Check
        run: cargo check --all --all-features
  doc:
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: -Dwarnings
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - name: Install GDAL
        run: |
          sudo apt-get update
          sudo apt-get install libgdal-dev
      - name: Doc
        run: cargo doc --all-features
  validate-stac-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Install Python dependencies
        run: uv sync --extra stac-api-validator
      - name: Validate
        run: uv run scripts/validate-stac-server
  validate-stac-server-pgstac:
    runs-on: ubuntu-latest
    services:
      pgstac:
        image: ghcr.io/stac-utils/pgstac:v0.8.6
        env:
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgis
          PGUSER: username
          PGPASSWORD: password
          PGDATABASE: postgis
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Install Python dependencies
        run: uv sync --extra stac-api-validator
      - name: Validate
        run: uv run scripts/validate-stac-server --pgstac
  validate-stac-geoparquet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
      - name: Install Python dependencies
        run: uv sync --extra stac-geoparquet
      - name: Validate
        run: uv run scripts/validate-stac-geoparquet
