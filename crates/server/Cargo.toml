[package]
name = "stac-server"
description = "SpatioTemporal Asset Catalog (STAC) API server"
version = "0.3.2"
keywords = ["geospatial", "stac", "metadata", "geo", "server"]
categories = ["science", "data-structures"]
edition.workspace = true
authors.workspace = true
homepage.workspace = true
repository.workspace = true
license.workspace = true
rust-version.workspace = true

[features]
axum = ["dep:axum", "dep:bytes", "dep:mime", "dep:tower-http"]
pgstac = ["dep:pgstac", "dep:bb8", "dep:bb8-postgres", "dep:tokio-postgres"]

[dependencies]
axum = { workspace = true, optional = true }
bb8 = { workspace = true, optional = true }
bb8-postgres = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
http.workspace = true
mime = { workspace = true, optional = true }
pgstac = { workspace = true, features = ["tls"], optional = true }
serde.workspace = true
serde_json.workspace = true
serde_urlencoded.workspace = true
stac.workspace = true
stac-api = { workspace = true, features = ["geo"] }
stac-types.workspace = true
thiserror.workspace = true
tokio-postgres = { workspace = true, optional = true }
tower-http = { workspace = true, features = ["cors", "trace"], optional = true }
tracing.workspace = true
url.workspace = true

[dev-dependencies]
serde_json.workspace = true
stac = { workspace = true, features = ["validate"] }
tokio = { workspace = true, features = ["macros"] }
tokio-test.workspace = true
tower = { workspace = true, features = ["util"] }

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
